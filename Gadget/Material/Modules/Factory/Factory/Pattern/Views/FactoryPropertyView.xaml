<base:ViewChildBase x:Class="Gadget.Factory.Pattern.Views.TFactoryPropertyView"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:base="clr-namespace:rr.Library.Infrastructure;assembly=rr.Library.Infrastructure"
                    xmlns:controls="clr-namespace:rr.Library.Controls;assembly=rr.Library.Controls"
                    xmlns:resources="clr-namespace:Shared.Resources;assembly=Blood.Shared.Resources"
                    xmlns:caliburn="http://www.caliburnproject.org"
                    DataContext="{x:Null}"
                    x:Name="ModuleFactoryPropertyViewModel">

    <Border Margin="2"
            Width="240">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--alerts-->
            <Border Grid.Row="0">
                <resources:TAlerts  Model="{Binding Model.AlertsModel}"
                                    caliburn:Message.Attach="[Event Loaded] = [OnAlertsLoaded ($source)]" />
            </Border>

            <!--property grid-->
            <Border Grid.Row="1">
                <StackPanel>
                    <!--component-->
                    <controls:TPropertyGrid VerticalAlignment="Stretch"
                                            IsEnabled="{Binding Model.ComponentModelProperty.IsInfoEnabled}"
                                            SelectedObject="{Binding Model.ComponentModelProperty.ComponentModel}"
                                            caliburn:Message.Attach="[Event Loaded] = [OnPropertyGridComponentLoaded ($source)]" />

                    <!--message, progress, busy, apply, cancel-->
                    <resources:TApplyCommand ShowPanel="{Binding Model.ComponentModelProperty.ShowPanel}"
                                             ProgressBarActive="{Binding Model.ComponentModelProperty.IsActiveProgress}"
                                             MessageText="{Binding Model.ComponentModelProperty.MessagePanel}"
                                             ContentBusyVisibility="{Binding Model.ComponentModelProperty.BusyVisibility}"
                                             ApplyEnabled="{Binding Model.ComponentModelProperty.IsEnabledApply}"
                                             CancelEnabled="{Binding Model.ComponentModelProperty.IsEnabledCancel}"
                                             caliburn:Message.Attach="[Event Apply] = [OnApplyCommadClicked ()]; [Event Cancel] = [OnCancelCommadClicked ()]" />

                    <!--extension-->
                    <controls:TPropertyGrid VerticalAlignment="Stretch"
                                            SelectedObject="{Binding Model.ComponentModelProperty.ExtensionModel}"
                                            caliburn:Message.Attach="[Event Loaded] = [OnPropertyGridExtensionLoaded ($source)]" />
                </StackPanel>
            </Border>
        </Grid>
    </Border>

</base:ViewChildBase>